services:
  app:
    build: .
    ports:
      - "8000:5000"
    volumes:
      - .:/app
      - ./flask_profiler.sqlite:/app/flask_profiler.sqlite
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - UPLOAD_FOLDER=/app/uploads
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/expense_tracker
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/receipts"]
      interval: 20s
      timeout: 5s
      retries: 5
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: expense_tracker
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  pgdata:
# ---
# For CI/CD and DockerHub integration, see roadmap and .github/workflows/ci.yml
# ---
