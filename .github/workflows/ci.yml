name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: sqlite:///test.db
      FLASK_ENV: testing
      GEMINI_API_KEY: dummy
      UPLOAD_FOLDER: uploads
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-jpn libgl1
    - name: Set up pip cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
        pip-compile --output-file=requirements.txt requirements.in
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest --maxfail=1 --disable-warnings
    - name: Run performance benchmarks
      run: |
        pytest tests/test_perf_bench.py --maxfail=1 --disable-warnings -q
